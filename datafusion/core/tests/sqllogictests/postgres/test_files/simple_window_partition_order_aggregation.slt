# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at

# http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

#  before round
#  4268716378 14 14 -13.8571428571428571 -194 118 -101         ---- postgres
#  4268716378 14 14 -13.857142857142858  -194 118 -101         ---- datafusion

#   before abs
#   2818832252 16 16  0 -3 102 -111    ---- postgres
#   2818832252 16 16 -0 -3 102 -111    ---- datafusion

query IIIRIII
SELECT
  c9,
  row_number() OVER (PARTITION BY c2 ORDER BY c9) AS row_number,
  count(c3) OVER (PARTITION BY c2 ORDER BY c9) AS count_c3,
  abs(round(avg(c3) OVER (PARTITION BY c2 ORDER BY c9), 0)) AS avg_c3_by_c2,
  sum(c3) OVER (PARTITION BY c2 ORDER BY c9) AS sum_c3_by_c2,
  max(c3) OVER (PARTITION BY c2 ORDER BY c9) AS max_c3_by_c2,
  min(c3) OVER (PARTITION BY c2 ORDER BY c9) AS min_c3_by_c2
FROM aggregate_test_100_by_sql
ORDER BY c9;

