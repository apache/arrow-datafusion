# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: Integration tests
on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        id: docker-builder
        uses: docker/setup-buildx-action@v1

      - name: Cache docker layer cache
        uses: actions/cache@v2
        id: buildx-layer-cache
        with:
          path: "${{ runner.temp }}/buildx-cache/layer"
          key: ${{ runner.os }}-buildx-layer-${{ hashFiles('**/Cargo.toml', '**/*.dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-buildx-layer-${{ hashFiles('**/Cargo.toml', '**/*.dockerfile') }}
            ${{ runner.os }}-buildx-layer-

      - name: Cache docker buildkit cache
        uses: actions/cache@v2
        id: buildx-buildkit-cache
        with:
          path: "${{ runner.temp }}/buildx-cache/buildkit"
          key: ${{ runner.os }}-buildx-buildkit-${{ hashFiles('**/Cargo.toml', '**/*.dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-buildx-buildkit-${{ hashFiles('**/Cargo.toml', '**/*.dockerfile') }}
            ${{ runner.os }}-buildx-buildkit-

      - name: Restore docker buildx cache
        # Handle cache mount in buildx
        # See https://github.com/docker/buildx/issues/156#issuecomment-537492942
        if: steps.buildx-buildkit-cache.outputs.cache-hit == 'true'
        env:
          BUILDX_BUILDER: ${{ steps.docker-builder.outputs.name }}
        run: |
          export BUILDX_BUILDER_CONTAINER="buildx_buildkit_${BUILDX_BUILDER}0"
          docker buildx stop --builder "${BUILDX_BUILDER}"
          docker run --rm --volumes-from "${BUILDX_BUILDER_CONTAINER}" \
            -v ${{ runner.temp }}/buildx-cache/buildkit:/backup \
            alpine:3.10 /bin/sh -c "cd / && tar xf /backup/backup.tar.gz"
          docker buildx inspect --builder "${BUILDX_BUILDER}" --bootstrap
          docker buildx --builder "${BUILDX_BUILDER}" du --verbose

      - name: Run integration test
        env:
          BUILDX_BUILDER: ${{ steps.docker-builder.outputs.name }}
          BUILDX_LAYER_CACHE_DIR: "${{ runner.temp }}/buildx-cache/layer"
        run: |
          ./dev/integration-tests.sh

      - name: Backup docker buildx cache
        env:
          KEEP_STORAGE: "3221225472.0" # 3GB
          BUILDX_BUILDER: ${{ steps.docker-builder.outputs.name }}
        run: |
          export BUILDX_BUILDER_CONTAINER="buildx_buildkit_${BUILDX_BUILDER}0"
          echo "Start pruning builder ${BUILDX_BUILDER_CONTAINER}"
          docker buildx --builder "${BUILDX_BUILDER}" prune --force --filter type=frontend
          docker buildx --builder "${BUILDX_BUILDER}" prune --force --filter type=regular
          docker buildx --builder "${BUILDX_BUILDER}" prune --force --filter type=source.local
          docker buildx --builder "${BUILDX_BUILDER}" prune --force --keep-storage ${KEEP_STORAGE}
          docker buildx --builder "${BUILDX_BUILDER}" du --verbose

          docker run --rm --volumes-from "${BUILDX_BUILDER_CONTAINER}" \
            -v ${{ runner.temp }}/buildx-cache/buildkit:/backup \
            alpine:3.10 /bin/sh -c "cd / && tar cf /backup/backup.tar.gz /var/lib/buildkit"
