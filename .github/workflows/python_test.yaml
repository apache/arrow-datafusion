# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: Python test
on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: db_test
        ports:
          - 5432/tcp
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - name: Setup Rust toolchain
        run: |
          rustup toolchain install nightly-2021-01-06
          rustup default nightly-2021-01-06
          rustup component add rustfmt
      - name: Cache Cargo
        uses: actions/cache@v2
        with:
          path: /home/runner/.cargo
          key: cargo-maturin-cache-
      - name: Cache Rust dependencies
        uses: actions/cache@v2
        with:
          path: /home/runner/target
          key: target-maturin-cache-
      - uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - name: Install Python dependencies
        run: python -m pip install --upgrade pip setuptools wheel
      - name: Run tests
        run: |
          cd python/
          export CARGO_HOME="/home/runner/.cargo"
          export CARGO_TARGET_DIR="/home/runner/target"

          python -m venv venv
          source venv/bin/activate

          # TODO move to use poetry
          pip install maturin==0.10.4 toml==0.10.2 pyarrow==4.0.0 psycopg2==2.8.6
          maturin develop

          python -m unittest discover tests
        env:
          POSTGRES_HOST: localhost
          POSTGRES_DB: db_test
          POSTGRES_PASSWORD: postgres
          POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
